/*----------  .grow is a holder for items  ----------*/

.grow-container {
	padding-left: gutter();
	padding-right: gutter();
	margin-left: auto;
	margin-right: auto;
	&.constrained {	
		@include container();
	}
}

.grow {
	@include clearfix();
	margin-left: - gutter();
	margin-right: - gutter();
}

.grow-item-defaults {
	padding-left: gutter();
	padding-right: gutter();
	box-sizing: border-box;
	float: left;	
}

@each $label, $map in $bp {
	@for $i from 1 through $grid-size {
		.grow-item-#{$label}-#{$i} {
			@extend .grow-item-defaults;
		}
	}
}

@each $label, $map in $bp {
	$min_width: map-get($map, 'min-width');

	@if $min_width {
		@include breakpoint( map-get($map, 'min-width') ) {
			@for $i from 1 through $grid-size {
				.grow-item-#{$label}-#{$i} {		
					// @include span($i of $grid-size);
					width: span($i of $grid-size);
				}
			}
		}
	}

	@else {
		@for $i from 1 through $grid-size {
			.grow-item-#{$label}-#{$i} {
				width: span($i of $grid-size);
			}
		}
	}

}